import streamlit as st
import gdown
import pickle
import pandas as pd
from prophet import Prophet



# Fun√ß√£o para carregar o modelo Prophet
@st.cache_resource
def carregar_modelo():
    # URL do modelo Prophet salvo no Google Drive
    #https://drive.google.com/file/d/11eL3dI9aeUGjVKUSDGrDccLJ4tPQMHTD/view?usp=sharing
    url = 'https://drive.google.com/uc?id=11eL3dI9aeUGjVKUSDGrDccLJ4tPQMHTD'
    
    # Fazer o download do modelo
    gdown.download(url, 'prophet_model.pkl', quiet=False)
    
    # Carregar o modelo Prophet com pickle
    with open('prophet_model.pkl', 'rb') as f:
        modelo = pickle.load(f)
    
    return modelo

# Fun√ß√£o principal do aplicativo
def main():
    # Configura√ß√£o da p√°gina
    st.set_page_config(page_title='MVP para an√°lise temporal de petr√≥leo',
                       page_icon='üõ¢Ô∏è')
    
    st.write('# MVP para an√°lise de pre√ßo do petr√≥leo Brent')

    # Carregar o modelo Prophet
    modelo = carregar_modelo()
    st.success("Modelo carregado com sucesso!")

    # Entradas do usu√°rio para previs√£o
    st.sidebar.header("Configura√ß√µes da Previs√£o")
    periods = st.sidebar.number_input("Quantos dias voc√™ quer prever?", min_value=1, value=30)

    # Bot√£o para gerar previs√£o
    if st.button("Gerar Previs√£o"):
        # Criar DataFrame futuro
        future = modelo.make_future_dataframe(periods=periods)

        # Fazer a previs√£o
        forecast = modelo.predict(future)

        # Mostrar resultados
        st.subheader("Resultados da Previs√£o")
        st.write(forecast[['ds', 'yhat', 'yhat_lower', 'yhat_upper']])

        # Plotar o gr√°fico
        st.subheader("Gr√°fico da Previs√£o")
        st.line_chart(forecast[['ds', 'yhat']].set_index('ds'))

    # Se√ß√µes adicionais como placeholders
    st.write("## Dashboard")
    st.write("## Insights")
    st.write("## Modelo")

# Rodar o aplicativo
if __name__ == "__main__":
    main()

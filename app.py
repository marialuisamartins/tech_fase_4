import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from statsmodels.tsa.arima.model import ARIMA
import datetime
import requests
import numpy as np

# Fun√ß√£o para carregar os dados e ajustar o modelo ARIMA
def modelo(data, steps=1):
    modelo = ARIMA(data['preco'], order=(2, 1, 2))
    modelo_fit = modelo.fit()
    forecast = modelo_fit.forecast(steps=steps)
    forecast_index = pd.date_range(start=data.index[-1] + pd.Timedelta(days=1), periods=steps, freq='D')
    forecast_series = pd.Series(forecast, index=forecast_index)
    return forecast_series

# Baixar o arquivo Excel
url = 'https://raw.githubusercontent.com/marialuisamartins/tech_fase4/6ad3e07bc901fd984eedb3030510b2816aaf7383/ipeadata%5B03-11-2024-01-09%5D.xlsx'
arquivo_local = 'ipeadata.xlsx'

# Fazer o download do arquivo e salvar localmente
response = requests.get(url)
with open(arquivo_local, 'wb') as file:
    file.write(response.content)

# Ler o arquivo Excel
ipeadata = pd.read_excel('ipeadata.xlsx', engine='openpyxl')

# Definir a coluna 'data' como √≠ndice e filtrar para a partir de 2021
ipeadata['data'] = pd.to_datetime(ipeadata['data'])
ipeadata.set_index('data', inplace=True)
ipeadata_filtered = ipeadata[ipeadata.index >= '2021-01-01']

# Adicionar cabe√ßalho superior estilizado com HTML
st.markdown("""
    <style>
        .title {
            text-align: center;
            font-size: 36px;
            color: #2C3E50;
            font-weight: bold;
            margin-top: 20px;
        }
        .header-bar {
            background-color: #2C3E50;
            padding: 10px;
            color: white;
            text-align: center;
            font-size: 24px;
            font-weight: bold;
        }
    </style>
    <div class="header-bar">Dashboard Interativo de Previs√£o e An√°lise do Pre√ßo do Petr√≥leo</div>
    <div class="title">Explora√ß√£o de Dados e Previs√µes</div>
""", unsafe_allow_html=True)

# Barra lateral com logo da FIAP
st.sidebar.image('https://upload.wikimedia.org/wikipedia/commons/5/54/Logo_FIAP.png', use_container_width=True)
st.sidebar.header("Explora√ß√£o do Pre√ßo do Petr√≥leo")
st.sidebar.write("An√°lise detalhada de pre√ßos e previs√µes para insights de mercado.")

# Informa√ß√µes estat√≠sticas importantes
st.markdown("### Estat√≠sticas e Insights Importantes")
st.write(f"**Valor m√°ximo no per√≠odo**: ${ipeadata_filtered['preco'].max():,.2f}")
st.write(f"**Valor m√≠nimo no per√≠odo**: ${ipeadata_filtered['preco'].min():,.2f}")
st.write(f"**M√©dia do per√≠odo**: ${ipeadata_filtered['preco'].mean():,.2f}")
st.write(f"**Desvio Padr√£o do per√≠odo**: ${ipeadata_filtered['preco'].std():,.2f}")

# Mostrar a previs√£o para hoje e para amanh√£
previsao_hoje = modelo(ipeadata_filtered, steps=1)
previsao_amanha = modelo(ipeadata_filtered, steps=2).iloc[1]

# Calcular a tend√™ncia (subindo ou descendo)
tendencia = "subindo" if previsao_amanha > previsao_hoje.iloc[0] else "descendo"
icone_tendencia = "üîº" if tendencia == "subindo" else "üîΩ"

# Informa√ß√µes sobre a previs√£o para hoje e amanh√£
st.markdown("### Previs√£o de Pre√ßo do Petr√≥leo")
st.write(f"**Previs√£o para hoje**: ${previsao_hoje.iloc[0]:,.2f}")
st.write(f"**Previs√£o para amanh√£**: ${previsao_amanha:,.2f} {icone_tendencia} ({tendencia})")

# Gr√°fico comparativo de pre√ßos de diferentes anos
st.markdown("### Compara√ß√£o de Pre√ßos de Diferentes Anos")
ipeadata_filtered['year'] = ipeadata_filtered.index.year
fig1, ax1 = plt.subplots(figsize=(14, 6))
sns.lineplot(data=ipeadata_filtered, x=ipeadata_filtered.index, y='preco', hue='year', marker='o', palette='tab10')
ax1.set_title("Compara√ß√£o de Pre√ßos do Petr√≥leo por Ano (2021-2024)")
ax1.set_xlabel("Data")
ax1.set_ylabel("Pre√ßo (USD)")
ax1.legend(title='Ano')
st.pyplot(fig1)
st.write("""
    Neste gr√°fico, podemos observar como os pre√ßos do petr√≥leo variam de ano para ano, destacando tend√™ncias e poss√≠veis sazonalidades. 
    Fatores como conflitos geopol√≠ticos, mudan√ßas na produ√ß√£o de petr√≥leo e crises econ√¥micas podem influenciar esses movimentos. 
    Por exemplo, picos em certos anos podem ter sido causados por tens√µes no Oriente M√©dio ou decis√µes da OPEP.
""")

# An√°lise de picos sazonais (detec√ß√£o de picos mensais)
st.markdown("### An√°lise de Picos Sazonais")
ipeadata_filtered['month'] = ipeadata_filtered.index.month
monthly_max = ipeadata_filtered.groupby('month')['preco'].max()

# Gr√°fico de picos mensais
fig2, ax2 = plt.subplots(figsize=(14, 6))
monthly_max.plot(kind='bar', color='orange', ax=ax2)
ax2.set_title("Picos Mensais de Pre√ßo do Petr√≥leo (2021-2024)")
ax2.set_xlabel("M√™s")
ax2.set_ylabel("Pre√ßo (USD)")
st.pyplot(fig2)
st.write("""
    Este gr√°fico mostra os picos mensais de pre√ßos do petr√≥leo. Analisando essas informa√ß√µes, podemos identificar meses espec√≠ficos em que os pre√ßos tendem a atingir seus valores mais altos, 
    o que pode indicar padr√µes sazonais no mercado. Por exemplo, aumentos em certos meses podem estar relacionados a aumentos na demanda durante o inverno ou √† especula√ß√£o antes de eventos pol√≠ticos importantes.
""")

# Gr√°fico dos √∫ltimos 15 dias
st.markdown("### Gr√°fico dos √öltimos 15 Dias")
ultimos_15_dias = ipeadata_filtered.tail(15)
fig3, ax3 = plt.subplots(figsize=(14, 6))
ax3.plot(ultimos_15_dias.index, ultimos_15_dias['preco'], color='blue', marker='o', linestyle='-', label='Pre√ßo Di√°rio')
ax3.set_title("Pre√ßo do Petr√≥leo - √öltimos 15 Dias")
ax3.set_xlabel("Data")
ax3.set_ylabel("Pre√ßo (USD)")
ax3.grid(True)
ax3.legend()
st.pyplot(fig3)
st.write("""
    Este gr√°fico mostra os pre√ßos do petr√≥leo nos √∫ltimos 15 dias. Analisando os pre√ßos recentes, podemos identificar tend√™ncias de curto prazo e correlacionar com eventos de mercado recentes, como relat√≥rios de produ√ß√£o, mudan√ßas na demanda e an√∫ncios econ√¥micos importantes.
""")

# Gr√°fico de varia√ß√£o di√°ria de pre√ßos
st.markdown("### Varia√ß√£o Di√°ria de Pre√ßos")
ipeadata_filtered['variacao_diaria'] = ipeadata_filtered['preco'].pct_change() * 100  # Varia√ß√£o percentual di√°ria
fig4, ax4 = plt.subplots(figsize=(14, 6))
ax4.plot(ipeadata_filtered.index, ipeadata_filtered['variacao_diaria'], color='red', marker='x', linestyle='--')
ax4.set_title("Varia√ß√£o Di√°ria Percentual do Pre√ßo do Petr√≥leo")
ax4.set_xlabel("Data")
ax4.set_ylabel("Varia√ß√£o (%)")
ax4.grid(True)
st.pyplot(fig4)
st.write("""
    A varia√ß√£o di√°ria dos pre√ßos mostra a volatilidade do mercado de petr√≥leo. Picos de varia√ß√£o podem indicar eventos de alto impacto, como not√≠cias de conflitos geopol√≠ticos, mudan√ßas na pol√≠tica de produ√ß√£o da OPEP, ou an√∫ncios econ√¥micos importantes que afetam a confian√ßa dos investidores.
""")

# An√°lise adicionais (m√©dia m√≥vel e distribui√ß√£o)
st.markdown("### An√°lises Adicionais")
analise_opcao = st.selectbox(
    "Escolha uma an√°lise para visualizar:",
    ["M√©dia M√≥vel de 7 dias", "M√©dia M√≥vel de 30 dias", "Distribui√ß√£o dos Pre√ßos"]
)

if analise_opcao == "M√©dia M√≥vel de 7 dias":
    st.markdown("#### M√©dia M√≥vel de 7 dias")
    ipeadata_filtered['media_movel_7'] = ipeadata_filtered['preco'].rolling(window=7).mean()
    fig5, ax5 = plt.subplots(figsize=(14, 6))
    ax5.plot(ipeadata_filtered.index, ipeadata_filtered['preco'], label='Pre√ßo Di√°rio', color='blue', alpha=0.5)
    ax5.plot(ipeadata_filtered.index, ipeadata_filtered['media_movel_7'], label='M√©dia M√≥vel de 7 dias', color='orange')
    ax5.set_title('Pre√ßo do Petr√≥leo com M√©dia M√≥vel de 7 dias')
    ax5.set_xlabel('Data')
    ax5.set_ylabel('Pre√ßo (USD)')
    ax5.legend()
    st.pyplot(fig5)

elif analise_opcao == "M√©dia M√≥vel de 30 dias":
    st.markdown("#### M√©dia M√≥vel de 30 dias")
    ipeadata_filtered['media_movel_30'] = ipeadata_filtered['preco'].rolling(window=30).mean()
    fig6, ax6 = plt.subplots(figsize=(14, 6))
    ax6.plot(ipeadata_filtered.index, ipeadata_filtered['preco'], label='Pre√ßo Di√°rio', color='blue', alpha=0.5)
    ax6.plot(ipeadata_filtered.index, ipeadata_filtered['media_movel_30'], label='M√©dia M√≥vel de 30 dias', color='green')
    ax6.set_title('Pre√ßo do Petr√≥leo com M√©dia M√≥vel de 30 dias')
    ax6.set_xlabel('Data')
    ax6.set_ylabel('Pre√ßo (USD)')
    ax6.legend()
    st.pyplot(fig6)

elif analise_opcao == "Distribui√ß√£o dos Pre√ßos":
    st.markdown("#### Distribui√ß√£o dos Pre√ßos")
    fig7, ax7 = plt.subplots(figsize=(12, 6))
    sns.histplot(ipeadata_filtered['preco'], bins=30, kde=True, color='skyblue')
    ax7.set_title('Distribui√ß√£o dos Pre√ßos do Petr√≥leo')
    ax7.set_xlabel('Pre√ßo (USD)')
    ax7.set_ylabel('Frequ√™ncia')
    st.pyplot(fig7)
